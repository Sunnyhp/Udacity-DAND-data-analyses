library(knitr)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library(knitr)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library(knitr)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
library(knitr)
opts_chunk$set(echo=TRUE, warning=FALSE, message=FALSE)
install.packages(ggthemes)
{r global_options, include=FALSE}
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
chooseCRANmirror(graphics=FALSE, ind=1)
install.packages("lmtest")
install.packages("lmtest", repos = "http://cran.us.r-project.org")
names(cut)
library(ggplot2)
data(diamonds)
summary(diamonds)
library(gridExtra)
qplot(x = price, data = cut)
library(ggplot2)
data(diamonds)
summary(diamonds)
library(gridExtra)
qplot(x = price, data = diamonds$cut)
qplot(x = price, data = diamonds)
qplot(x = diamonds$cut, data = diamonds)
by(diamonds$cut, diamond$price, sum)
by(diamonds$cut, diamonds$price, sum)
by(diamonds$cut, diamonds$cut$price, sum)
by(diamonds$cut, sum)
summary(diamonds$cut, sum)
summary(diamonds$cut, diamonds$price)
summary(diamonds$cut)
View(diamonds)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
View(diamonds)
diamonds$cut: Fair
diamonds$cut:Fair
summary(diamonds$cut:Fair)
by(diamonds$cut:Fair)
by(diamonds$cut)
summary(diamonds$cut)
summary(diamonds$cut: Good)
diamonds$cut: Good
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
diamonds$cut: Good
qplot(y = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
qplot(x = price, data = diamonds) + facet_wrap(price ~cut)
library(ggplot2)
data(diamonds)
summary(diamonds)
View(diamonds)
qplot(x = carat, data = diamonds)
qplot(x = log10(carat), data = diamonds)
qplot(x = log10(price), data = diamonds)
qplot(x = log10, data = diamonds)
qplot(x = log10, data = diamonds)
qplot(x = price, data = diamonds)
qplot(x = log10(price), data = diamonds)
qplot(x = log10(price), data = diamonds) + facet_wrap(cut)
qplot(x = log10(price), data = diamonds) + facet_wrap(cut))
qplot(x = log10(price), data = diamonds) + facet_wrap(cut)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = log10(price), data = diamonds) + facet_wrap(cut
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = log10(price), data = diamonds) + facet_wrap(cut)
qplot(x = log10(price), data = diamonds) + facet_wrap(~cut)
qplot(x = cut, y = price,  data = diamonds
geom = 'boxplot')
qplot(x = cut, y = price,  data = diamonds,
geom = 'boxplot')
grid.arrange(p1, p2, p3, ncol = 3)
library(ggplot2)
data(diamonds)
summary(diamonds)
library(gridExtra)
p1 < -qplot(x = cut, y = price,  data = diamonds,
geom = 'boxplot')
p2 < -qplot(x = clarity, y = price,  data = diamonds,
geom = 'boxplot')
p3 < -qplot(x = color, y = price,  data = diamonds,
geom = 'boxplot')
grid.arrange(p1, p2, p3, ncol = 3)
grid.arrange(p1, p2, p3, ncol = 3)
grid.arrange(p1, p2, p3, ncol = 3)
library(ggplot2)
data(diamonds)
summary(diamonds)
library(gridExtra)
p1 <- qplot(x = cut, y = price,  data = diamonds,
geom = 'boxplot')
p2 <- qplot(x = clarity, y = price,  data = diamonds,
geom = 'boxplot')
p3 <- qplot(x = color, y = price,  data = diamonds,
geom = 'boxplot')
grid.arrange(p1, p2, p3, ncol = 3)
IQR(subset(diamonds, price <1000)$price)
names(diamonds)
IQR(subset(diamonds$color)
IQR(subset(diamonds$color))
library(ggplot2)
data(diamonds)
summary(diamonds)
IQR(subset(diamonds$color))
library(ggplot2)
data(diamonds)
summary(diamonds)
IQR(diamonds$color)
IQR(subset(diamonds, diamonds$color)$D)
IQR(subset(diamonds, diamonds$color)$color)
IQR(subset(diamonds, D)$color)
View(diamonds)
qplot(x = print, y = color, data = diamonds,
geom = 'boxplot')
qplot(x = price, y = color, data = diamonds,
geom = 'boxplot')
qplot(x = color, y = price, data = diamonds,
geom = 'boxplot')
qplot(x = color, y = price/carat, data = diamonds,
geom = 'boxplot')
names(pf)
names(diamonds)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
color = diamonds$carat,
geom = 'freqpoly')
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
color = carat,
geom = 'freqpoly')
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = diamonds$carat, data = diamonds,
color = carat,
geom = 'freqpoly')
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
color = weight,
geom = 'freqpoly')
names(diamonds)
qplot(x = carat, data = diamonds)
qplot(x = carat, data = diamonds) + facet_wrap(~carat)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
color = carat)
qplot(y = count, data = diamonds,
geom = 'freqpoly',
color = carat)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
color = carat)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
color = carat) +
scale_y_continuous(lim = c(0, 20000, 100), breaks = c(0, 2000, 50)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
color = carat) +
scale_y_continuous(lim = c(0, 20000, 100), breaks = c(0, 2000, 50))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
binwidth = 100,
color = carat)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
binwidth = 10,
color = carat)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
binwidth = 1,
color = carat)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
color = carat)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
ylim = (0,2000),
color = carat)
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
ylim = (0,2000))
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
ylim = (0, 2000))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly',
ylim = (0:2000))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 2000), breaks = c(0, 2000, 10))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 2000), breaks = c(0, 2000, 1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
binwidth = 1,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
binwidth = 0.1,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
qplot(x = carat, data = diamonds,
binwidth = 0.05,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
binwidth = 0.005,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
qplot(x = carat, data = diamonds,
binwidth = 0.01,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
qplot(x = carat, data = diamonds,
binwidth = 0.01,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 2000), breaks = c(0, 2000, 1))
qplot(x = carat, data = diamonds,
binwidth = 0.01,
geom = 'freqpoly')  +
scale_y_continuous(limits = c(0, 3000), breaks = c(0, 2000, 1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
binwidth = 0.01,
ylim = (0, 3000)
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
ylim = (0, 3000)
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
ylim = c(0, 3000),
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
ylim = c(0, 3000),
binwidth = 1,
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.1))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
ylim = c(0, 3000),
binwidth = 0.01,
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.1))
qplot(x = carat, data = diamonds,
ylim = c(0, 3000),
binwidth = 0.01,
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 0.5))
library(ggplot2)
data(diamonds)
summary(diamonds)
qplot(x = carat, data = diamonds,
ylim = c(0, 3000),
binwidth = 0.01,
geom = 'freqpoly')  +
scale_x_continuous(limits = c(0, 5.01), breaks = c(0, 5.01, 1))
install.packages("dplyr", dependencies = T)
install.packages("dplyr", dependencies = T)
install.packages("dplyr", dependencies = T)
install.packages("dplyr", dependencies = T)
install.packages("ggplot2", dependencies = T)
install.packages("ggplot2", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
install.packages("knitr", dependencies = T)
library(ggplot2)
library(grid)
library(gridExtra)
library(dplyr)
setwd('~/Documents/P4')
rw <- read.csv('wineQualityReds.csv')
ggplot(aes(x = fixed.acidity, y = citric.acid), data = rw) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(aes(x = fixed.acidity, y = pH), data = rw) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(aes(x = citric.acid, y = pH), data = rw) +
geom_point() +
geom_smooth(method = 'lm')
ggplot(data=rw, aes(factor(quality), fill=rating)) +
geom_bar() +
xlab("Quality (score between 0 and 10)") +
ylab("Number of wines")
rw$rating <- ifelse(rw$quality < 5, 'Poor',
ifelse(rw$quality < 7, 'Average', 'Good'))
rw$rating <- ordered(rw$rating, levels = c('Poor', 'Average', 'Good'))
ggplot(data=rw, aes(factor(quality), fill=rating)) +
geom_bar() +
xlab("Quality (score between 0 and 10)") +
ylab("Number of wines")
b1 <- ggplot(aes(x = factor(quality), y = fixed.acidity), data = rw) +
geom_jitter(alpha=0.3) +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red")+
geom_smooth(method='lm', aes(group = 1)) +
xlab('factor(quality) (score between 0 and 10)') +
ylab('Fixed Acidity (tartaric acid - g/dm^3)') +
guides(fill=FALSE)
b2 <- ggplot(aes(x = factor(quality), y = citric.acid), data = rw) +
geom_jitter(alpha=0.3) +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red")+
geom_smooth(method='lm', aes(group = 1)) +
xlab('factor(quality) (score between 0 and 10)') +
ylab('Citric Acid (g/dm^3)') +
guides(fill=FALSE)
b3 <- ggplot(aes(x = factor(quality), y = volatile.acidity), data = rw) +
geom_jitter(alpha=0.3) +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red")+
geom_smooth(method='lm', aes(group = 1)) +
xlab('factor(quality) (score between 0 and 10)') +
ylab('Volatile Acidity (acetic acid - g/dm^3)') +
guides(fill=FALSE)
b4 <- ggplot(aes(x = factor(quality), y = pH), data = rw) +
geom_jitter(alpha=0.3) +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red")+
geom_smooth(method='lm', aes(group = 1)) +
xlab('factor(quality) (score between 0 and 10)') +
ylab('pH')
grid.arrange(b1, b2, b3, b4, ncol = 2, top='Effect of fixed.acidity, citric.acid and pH on wine quality ratings')
p1 <- ggplot(aes(x = volatile.acidity, y = citric.acid, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (cetic acid - g/dm^3)') +
ylab('Citric acid (g/dm^3)') +
theme(legend.position="bottom")
p2 <- ggplot(aes(x = volatile.acidity, y = sulphates, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (cetic acid - g/dm^3)') +
ylab('Sulphates (potassium sulphate - g/dm^3)') +
theme(legend.position="bottom")
p3 <- ggplot(aes(x = volatile.acidity, y = round(alcohol), color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (acetic acid - g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
p4 <- ggplot(aes(x = citric.acid, y = sulphates, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Citric acid (g/dm^3)') +
ylab('Sulphates (potassium sulphate - g/dm^3)') +
theme(legend.position="bottom")
p5 <- ggplot(aes(x = citric.acid, y = alcohol, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Citric acid (g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
p6 <- ggplot(aes(x = sulphates, y = alcohol, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Sulphates (potassium sulphate - g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
grid.arrange(p1, p2, p3, p4, p5, p6, ncol = 2,
top = paste('comparisson of the main features,',
'with density maps (grouped by rating)'))
p1 <- ggplot(aes(x = volatile.acidity, y = citric.acid, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (cetic acid - g/dm^3)') +
ylab('Citric acid (g/dm^3)') +
theme(legend.position="bottom")
p2 <- ggplot(aes(x = sulphates, y = alcohol, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Sulphates (potassium sulphate - g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
p3 <- ggplot(aes(x = volatile.acidity, y = round(alcohol), color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (acetic acid - g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
p4 <- ggplot(aes(x = citric.acid, y = sulphates, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Citric acid (g/dm^3)') +
ylab('Sulphates (potassium sulphate - g/dm^3)') +
theme(legend.position="bottom")
p5 <- ggplot(aes(x = citric.acid, y = alcohol, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Citric acid (g/dm^3)') +
ylab('Alcohol (% by volume)') +
theme(legend.position="bottom")
p6 <- ggplot(aes(x = volatile.acidity, y = sulphates, color = factor(rating)),
data = rw) +
geom_point(alpha = 0.5, size = 1, position = 'jitter') +
geom_smooth(method = "lm", se = FALSE,size=1) +
scale_color_brewer(palette = "Blues") +
xlab('Volatile acidity (cetic acid - g/dm^3)') +
ylab('Sulphates (potassium sulphate - g/dm^3)') +
theme(legend.position="bottom")
grid.arrange(p1, p2, p3, p4, p5, p6, ncol = 2,
top = paste('comparisson of the main features,',
'with density maps (grouped by rating)'))
